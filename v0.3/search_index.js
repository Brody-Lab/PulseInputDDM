var documenterSearchIndex = {"docs":
[{"location":"man/development/#Developing-the-code-1","page":"Developing the code","title":"Developing the code","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"If you want to go beyond using the code to add some functionality and then share it with everyone, here's my suggested method for doing that. ","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Julia's package manager makes it easy to develop packages that are hosted as git repositories. Assuming that you added this package using julia's package manager (i.e. ] add [package-name]) it's easy to create a second version of the package which you can experiment with and edit. To do this type ] dev https://github.com/Brody-Lab/pulse_input_DDM/. This will create a second version of the package here ~/.julia/dev which will be called from now on when you type using pulse_input_DDM. The directory located in ~/.julia/dev is basically a normal git repository, but it kind of shares this special connection with julia now.","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Normally I try to make all changes to my code base in the dev branch of my repository. The general idea here is that all experimental code development should take place off the master branch and only be merged with the master branch once its continued stability and robustness is insured. ","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"If you followed the above instructions, you likely only have the master branch in your ~/.julia/dev directory. To 'switch over' (checkout in the language of git) to the dev branch on you local machine and to 'match it up' with the dev branch on github, in a shell (not in julia) you should navigate to ~/.julia/dev and then type git checkout --track origin/dev. You can verify that you are now on the dev branch with git branch (a star should appear next to dev).","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"To jump back to the master branch, type git checkout master. Now all of the code if this git repo is switch over to whatever state it was in in the master bracnh. Now swithc over to the dev branch again with git checkout dev. Now all of the code reflects its status in the dev branch.","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Now, the proper thing to do here is to make another branch, off of the dev branch to make some code changes. Once those changes are complete, we can attempt to merge them into the dev branch, and once the dev branch is super-duper stable, we can merge that with master. ","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"To make a new branch, called brians_dev off of dev type git checkout -b brians_dev dev (make sure you are on branch dev with git branch). Now from here, you can make (git add) and commit (git commit) changes as you normally would, which will all be confined to this branch. ","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"To push these new changes to a new remote branch in the repo, type git push -u origin brians_dev. The -u option will 'sync' up this branch with the newly created brians_dev remote branch so that when you push and pull on this branch it does so from the correct remote branch.","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Here's a useful page of instructions about julia package development.","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Here's a useful page about git.","category":"page"},{"location":"man/development/#Adding-tests-1","page":"Developing the code","title":"Adding tests","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"A useful way to ensure the continued stabilty of code is to include tests within a package. For julia packages, these are located in the file tests\\runtests.jl. Basically, you include whatever function you care to test, the @test 'macro' and the expected output in that file. Whenever code is pushed to the repository, it is build on Travis-CI, according to the specifcations on the travis.yml file also located in the repository. If the tests fails, it will be immedaitely reported on the repo landing page. See runtests.jl for examples and please consider adding tests when you add functionality.","category":"page"},{"location":"man/development/#Developing-the-documentation-1","page":"Developing the code","title":"Developing the documentation","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"Another key step in maintaining a clear and robust code repository is documentation. I've established a few conventions that, if maintained, will allow others to use this codebase relatively easily. ","category":"page"},{"location":"man/development/#Adding-docstrings-1","page":"Developing the code","title":"Adding docstrings","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"A docstring is a bit of code directly above a function, delineated by \"\"\"...\"\"\" that explains the details of how the function works. If properly formatted, they can then be access in a julia repl by typing ?. ","category":"page"},{"location":"man/development/#Adding-doctests-1","page":"Developing the code","title":"Adding doctests","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"A doctest can be added to a docstring to add additional explanation and to test whether a written function works as intended. See julia's documentation page for an explanation of doctests. ","category":"page"},{"location":"man/development/#Adding-to-this-html-documentation-1","page":"Developing the code","title":"Adding to this html documentation","text":"","category":"section"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"I developed this documentation using Documenter.jl. This is a julia package that, once correctly instantiated, will automatically build a html webpage (this very webpage you're reading!) based on markdown files located in a specified directory in a git repo (usually docs) using Travis-CI whenever there is a push to that repo, and host that html webpage on the github repo on a gh-pages branch. ","category":"page"},{"location":"man/development/#","page":"Developing the code","title":"Developing the code","text":"To add a new page, you need to add a markdown files (example.md) in the docs/src/man directory. Once you have you need to include it and its location in the make.jl file located in docs, so that it appears in the index of the html page.","category":"page"},{"location":"man/vpn_is_annoying/#Efficient-Remote-SSH-1","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"","category":"section"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"(Thanks to Nick Roy of the PillowLab for these instructions!)","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"This page is all about how to SSH into spock, della, scotty or any other campus resource without needing to use VPN.","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"The basic idea here is to use RSA to SSH through an intermediate, open, server. In this case, the two options are nobel (nobel.princeton.edu) and arizona (arizona.princeton.edu). This should work on any unix machine (linux and MAC). Windows people should seek immediate attention. The steps are as follows:","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"Edit (or create and edit) an ssh config on your local machine (usually located at ~/.ssh/config) using VIM or your favorite text editor. Add the following code:","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"Host nobel\nUser [username]\nHostName nobel.princeton.edu\n\nHost spock\nUser [username]\nHostName scotty.princeton.edu\nForwardX11 yes\nForwardX11Trusted yes\nProxyCommand ssh nobel -oClearAllForwardings=yes -W %h:%p   ","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"In this code, you should replace [username] with your username (i.e. what you log into each server under) and nobel can be replaced everywhere with arizona if you would like to use arizona as the pass-through server. To access other machines, replace spock with della or scotty.","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"Create RSA keys to facilitate no-password logins more information here. The steps here are to make the RSA key:","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":">> ssh-keygen -t rsa","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"Then hit enter twice to save the RSA key to the default location and to not include an RSA password. Now add the key to the pass-through server and the remote machine via:","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":">> ssh-copy-id [username]@nobel.princeton.edu\n>> ssh-copy-id [username]@spock.princeton.edu","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"where again [username] is your login name and you can change the address (spock.princeton.edu) to whichever machine you are trying to access. Make sure to do this first for either arizona or nobel (whichever you decide to use) and then again for the machine you are trying to access.","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"With the above code, you can now simply ssh in via","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":">> ssh scotty   ","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"and not even have to worry about VPN, passwords etc.","category":"page"},{"location":"man/vpn_is_annoying/#","page":"Efficient Remote SSH","title":"Efficient Remote SSH","text":"These instructions can also be found here.","category":"page"},{"location":"links/#Index-1","page":"Index","title":"Index","text":"","category":"section"},{"location":"links/#","page":"Index","title":"Index","text":"Order   = [:type, :function]","category":"page"},{"location":"old_index/#pulse-input-DDM-1","page":"pulse input DDM","title":"pulse input DDM","text":"","category":"section"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"This is a package for inferring the parameters of drift diffusion models (DDMs) using gradient descent from neural activity or behavioral data collected when a subject is performing a pulse-based input evidence accumlation task.","category":"page"},{"location":"old_index/#Getting-Started-1","page":"pulse input DDM","title":"Getting Started","text":"","category":"section"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"If you want to fit the model to some data but want to interact with Julia, I recommend using a Jupyter notebook on scotty via a SSH tunnel. This is somewhat involved to set up but worth the time. See Preliminaries to fitting the model interactively on scotty for the necessary steps.","category":"page"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"To install the package, see Getting the pulse input DDM package from GitHub.","category":"page"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"If you want to fit a model non-interactively using spock, see Using spock.","category":"page"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"Other useful tips can be found here (DUO authentication required).","category":"page"},{"location":"old_index/#Fitting-models-1","page":"pulse input DDM","title":"Fitting models","text":"","category":"section"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"The basic functions you need to optimize the model parameters for choice data are described in Fitting a model to choices.  If you want to optimize the model parameters for neural data, look here Fitting a model to neural activity. ","category":"page"},{"location":"old_index/#","page":"pulse input DDM","title":"pulse input DDM","text":"Pages = [\n    \"man/using_spock.md\",\n    \"man/choice_observation_model.md\",\n    \"man/neural_observation_model.md\"]\nDepth = 2","category":"page"},{"location":"functions/#Functions-1","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"functions/#","page":"Functions","title":"Functions","text":"","category":"page"},{"location":"man/setting_things_up_on_scotty/#Preliminaries-to-fitting-the-model-interactively-on-scotty-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"First you need to install Julia in your scotty user directory via anaconda. This will be a whole new installation of Julia (not the installation you might normally use on scotty if you typed module load julia) which means if you've used another installation of Julia on scotty before, all the packages you might have added won't be there. Using a new anaconda installation of Julia allows easier use of Jupyter notebooks via a SSH tunnel. ","category":"page"},{"location":"man/setting_things_up_on_scotty/#Installing-Julia-via-anaconda-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Installing Julia via anaconda","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"From your local machine, make a ssh connection with scotty, ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> ssh [username]@scotty.princeton.edu","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"where [username] is your scotty username, assuming you have one. If you do not have a username email PNI help.","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"(If you haven't configured your local machine so that you can avoid using the VPN to access scotty, do that first. Instructions are provided on the Efficient Remote SSH page.)","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Next load an anaconda module on scotty (for example, 5.1.0), ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> module load anacondapy/5.1.0","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Presently, you are using the \"base\" anaconda environment, for which PNI users do not have write privileges. You need to create a new environment, which we will call \"Julia\",","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> conda create --name julia","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Now that you've created this new environment, you need to \"activate\" it, ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> source activate julia","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Next, you need to install Julia within this environment via anaconda, ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> conda install -c conda-forge julia","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"You are using a whole new version of Julia (not the one you use when you execute module load julia on scotty or spock), so you will need to re-install lots of packages (if you have used Julia on scotty or spock before), most specifically, the IJulia package so you can use Julia in a Jupyter notebook.","category":"page"},{"location":"man/setting_things_up_on_scotty/#Installing-the-IJulia-package-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Installing the IJulia package","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Once, Julia is installed, you can launch it by typing julia. From here, you need to add the IJulia package so you can use Julia in a notebook. In Julia 1.0, you can access the \"package manager\" by pressing ]. From there, enter","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    (v1.0) pkg > add IJulia","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"You might now want to add any packages you use, again in the normal way (for example, you can now add the pulse_input_DDM package, as we will do eventually, described in the Getting the pulse input DDM package from GitHub section). You're done (with this part)! You can exit Julia.","category":"page"},{"location":"man/setting_things_up_on_scotty/#Opening-a-notebook-on-scotty-and-creating-a-SSH-tunnel-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Opening a notebook on scotty and creating a SSH tunnel","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Now, that Julia is all set up, you need to launch a Jupyter notebook on scotty (which is possible because you're already using the anaconda module, which contains jupyter). In your ssh connection to scotty, type ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> jupyter notebook","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Once this has executed, it will pick a port on which to run and provide you a url so that you can launch the notebook in your local browser. But before you can do that, you need to create a \"ssh tunnel\" from the open port on scotty and a port on your local machine. In a separate terminal window, create a new ssh connection to scotty, but one that will map the ports, ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    >> ssh -L <port>:localhost:<port> [username]@scotty.princeton.edu","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"where <port> is the port assigned by scotty, and the second <port> is one on your local machine (you can pick the same one that scotty did, if you don't happen to be already using it).","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Now, copy the url that was created when you launched the jupyter notebook into your local browser, and voila! On a mac, you can press the \"command\" key (⌘), and the url should become underlined, at which point you can click on it with the  mouse and the link should open in your local browser.","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Here is a screen shot of what a typical terminal will look like, showing the url (at the bottom) that needs to be copied and pasted or clicked on:","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"(Image: notebook-screen-shot)","category":"page"},{"location":"man/setting_things_up_on_scotty/#Now-that-everything's-set-up,-how-do-I-open-a-notebook-*again*?-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Now that everything's set up, how do I open a notebook again?","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Next time, you only need to:","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"SSH into scotty: $ ssh scotty.\nLoad the anaconda module: $ module load anacondapy/5.1.0.\nActivate the julia environment: $ source activate julia.\nLaunch a jupyter notebook: $ jupyter notebook.\nCreate the ssh tunnel: $ ssh -L <port>:localhost:<port> scotty.","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"These instructions can also be found here.","category":"page"},{"location":"man/setting_things_up_on_scotty/#Running-interactively-on-spock-brody-instead-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Running interactively on spock-brody instead","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"I'm not sure if this is technically supported by PNI IT or not, but sometimes scotty can be bogged down with lots of jobs. Our personal computing cluster (spock-brody) that PNI manages is mostly set up for batch jobs (like spock) but can be hyjacked to run interactively by executing the following from spock (once you made a SSH connection to it):","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    $ salloc -p Brody -t 24:00:00 -c 44 srun --pty bash","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"This will request 1 node (44 cores) for 24 hours from the Brody partition. The second bit srun --pty bash will open a bash shell on the compute node you just requested. You can now use it like you used scotty above. ","category":"page"},{"location":"man/setting_things_up_on_scotty/#Jupyter-notebook-server-on-spock-brody-1","page":"Preliminaries to fitting the model interactively on scotty","title":"Jupyter notebook server on spock-brody","text":"","category":"section"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"If you wanted to run a jupyter notebook server on spock-brody, you need to do some fancy SSH tunneling to get it to work. Here's how to do the whole thing, beginning to end.","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"First, you need to create a file and modify some jupyter defaults. Without doing this, jupyter tries to write some files in a location that you won't have permissions for. ","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"Next, you need to create a \"cookie secret\" file (I have no idea what this is, but it sounds delicious!) You can find details about this here. $ openssl rand -hex 32 > [path]/jupyterhub_cookie_secret. Here [path] is something you decide and have write access to. For example I used /mnt/bucket/people/briandd/.jupyter/.\nNext, you need to create a default jupyter config file by typing $ jupyter notebook --generate-config. I learned about this here. Now you need to edit this file to indicate the location of the cookie secret you just made. Modify the lines in the newly created file jupyter_notebook_config.py, which is located in $HOME/.jupyter so that it reads","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"    c.Notebook.cookie_secret_file = '[path]/jupyter_cookie_secret'","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"OK, now we can go ahead and open our jupyter notebook and create our crazy SHH tunnel.","category":"page"},{"location":"man/setting_things_up_on_scotty/#","page":"Preliminaries to fitting the model interactively on scotty","title":"Preliminaries to fitting the model interactively on scotty","text":"ssh spock\ntmux new -s [name] \\; split-window -h \\; attach, where [name] is whatever you want to name the tmux session.\nIn one tmux pane, you are going request the resources you want from spock-brody and create the jupyter notebook, and then in the other, you are going to create a SSH tunnel from the spock login node to the compute node you are currently using. Then, you have to create a SSH tunnel from your local machine to the spock login node (as we have done before). \nIn detail, in one pane:\n\n  ```\n      >> salloc -p Brody -t 24:00:00 -c 44 srun --pty bash\n  ```\n      \n  which will automatically create and \"move you\" over to a bash shell in the compute node.\nmodule load anacondapy/5.1.0\nsource activate julia\nEach time you try to do this, you have to $ unset XDG_RUNTIME_DIR. I'm not exactly sure what this does, but I discovered this solution here.\njupyter notebook\nNow you should have a jupyter notebook server running in that pane (which is actually a bash shell running on the spock-brody compute node).\nIn the other pane, you need to create a SSH tunnel from the spock login node (which is where this panel exists) and the spock-brody compute node you are using. The name of that node should have been reported back to you when you ran salloc, for example it might be called spock-brody01-01. To creat the tunnel, type ssh -L <port1>:localhost:<port2> [node-name] where <port1> is an open port on the spock login node, <port2> is the port on the spock compute node where your jupyter notebook is running and [node-name] is the name of the spock compute node you are using.\nFinally, detach you tmux session <crtl-D> and exit your SSH connection with spock. Now, create another SSH tunnel from your local machine to the spock login node ssh -L <port1>:localhost:<port2> spock where <port1> is an open port on your local machine and <port2> is the port you assigned the SSH tunnel to on the spock login node. After you do this, you will have an SSH connection again with the spock login node. To re-attach your tmux session, type tmux attach -t [name]. And then, you can clikc on the link provided by the jupyter notebook, which should open in a browse on your local machine. Phew!\nIn the second tmux pane, you can open an htop to see your activity on the compute node htop -u [username].","category":"page"},{"location":"man/using_spock/#Using-spock-1","page":"Using spock","title":"Using spock","text":"","category":"section"},{"location":"man/using_spock/#","page":"Using spock","title":"Using spock","text":"We can fit the parameters of the latent model uses animal choices.","category":"page"},{"location":"man/using_spock/#Key-functions-1","page":"Using spock","title":"Key functions","text":"","category":"section"},{"location":"man/using_spock/#","page":"Using spock","title":"Using spock","text":"","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"EditURL = \"https://github.com/Brody-Lab/pulse_input_DDM/blob/master/examples/choice model/fit_choice_model.jl\"","category":"page"},{"location":"generated/fit_choice_model/#Loading-data-and-fitting-a-choice-model-1","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"The package expects your data to live in a single .mat file which should contain a struct called rawdata. Each element of rawdata should have data for one behavioral trial and rawdata should contain the following fields with the specified structure:","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"rawdata.leftbups: row-vector containing the relative timing, in seconds, of left clicks on an individual trial. 0 seconds is the start of the click stimulus.\nrawdata.rightbups: row-vector containing the relative timing in seconds (origin at 0 sec) of right clicks on an individual trial. 0 seconds is the start of the click stimulus.\nrawdata.T: the duration of the trial, in seconds. The beginning of a trial is defined as the start of the click stimulus. The end of a trial is defined based on the behavioral event “cpoke_end”. This was the Hanks convention.\nrawdata.pokedR: Bool representing the animal choice (1 = right).","category":"page"},{"location":"generated/fit_choice_model/#Fitting-the-model-1","page":"Loading data and fitting a choice model","title":"Fitting the model","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Once your data is correctly formatted and you have the package added in julia, you are ready to fit the model. You need to write a slurm script to use spock's resources and a .jl file to load the data and fit the model. See examples of each below. These files are also located in the package in the examples directory.","category":"page"},{"location":"generated/fit_choice_model/#Example-slurm-script-1","page":"Loading data and fitting a choice model","title":"Example slurm script","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"This will start a job called fit_choice_model. Output will be written to a log file called fit_choice_model.out. This will run on the Brody partition of spock for 12 hours, using 44 cores and 64 GB of memory. You'll notice that we load the julia module (like we did when we added the package) and then we call julia (-p 44 uses the 44 cores) and ask it to run the .jl file.","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"#!/usr/bin/env bash\n\n#SBATCH -J 'fit_choice_model'\n#SBATCH -o ../logs/fit_choice_model.out\n#SBATCH -p Brody\n#SBATCH --time=12:00:00\n#SBATCH --mem=64000\n#SBATCH -c 44\n\nmodule load julia/1.0.0\njulia -p 44 ./fit_choice_model.jl","category":"page"},{"location":"generated/fit_choice_model/#Example-.jl-file-1","page":"Loading data and fitting a choice model","title":"Example .jl file","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"using pulse_input_DDM","category":"page"},{"location":"generated/fit_choice_model/#Load-some-data-1","page":"Loading data and fitting a choice model","title":"Load some data","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"data = load(\"../examples/choice model/example_matfile.mat\")","category":"page"},{"location":"generated/fit_choice_model/#Set-options-for-optimization-1","page":"Loading data and fitting a choice model","title":"Set options for optimization","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"n = 53\n\noptions = choiceoptions(fit = vcat(trues(9)),\n    lb = vcat([0., 8., -5., 0., 0., 0.01, 0.005], [-30, 0.]),\n    ub = vcat([2., 30., 5., 100., 2.5, 1.2, 1.], [30, 1.]),\n    x0 = vcat([0.1, 15., -0.1, 20., 0.5, 0.8, 0.008], [0.,0.01]))","category":"page"},{"location":"generated/fit_choice_model/#Load-some-data-2","page":"Loading data and fitting a choice model","title":"Load some data","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"save_file = \"../examples/choice model/example_results.mat\"\n\n#if you've already ran the optimization once and want to restart from where you stoped, this will reload those parameters\nif isfile(save_file)\n    options.x0 = reload(save_file)\nend","category":"page"},{"location":"generated/fit_choice_model/#Optimize-stuff-1","page":"Loading data and fitting a choice model","title":"Optimize stuff","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"model, = optimize(data, options, n; iterations=5, outer_iterations=1)","category":"page"},{"location":"generated/fit_choice_model/#Compute-Hessian-and-the-confidence-interavls-1","page":"Loading data and fitting a choice model","title":"Compute Hessian and the confidence interavls","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"H = Hessian(model, n)\nCI, HPSD = CIs(H);\nnothing #hide","category":"page"},{"location":"generated/fit_choice_model/#Save-results-1","page":"Loading data and fitting a choice model","title":"Save results","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"save(save_file, model, options, CI)","category":"page"},{"location":"generated/fit_choice_model/#Getting-help-1","page":"Loading data and fitting a choice model","title":"Getting help","text":"","category":"section"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"To get more details about how any function in this package works, in julia you can type ? and then the name of the function. Documentation will display in the REPL.","category":"page"},{"location":"generated/fit_choice_model/#","page":"Loading data and fitting a choice model","title":"Loading data and fitting a choice model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"EditURL = \"https://github.com/Brody-Lab/pulse_input_DDM/blob/master/examples/neural model/recover_neural_model.jl\"","category":"page"},{"location":"generated/recover_neural_model/#Fitting-a-neural-model-1","page":"Fitting a neural model","title":"Fitting a neural model","text":"","category":"section"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"using pulse_input_DDM","category":"page"},{"location":"generated/recover_neural_model/#Geneerate-some-data-1","page":"Fitting a neural model","title":"Geneerate some data","text":"","category":"section"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"f, ncells, ntrials, nparams = \"Sigmoid\", [1,2], [10,5], 4\n\nθ_syn = θneural(θz = θz(σ2_i = 0.5, B = 15., λ = -0.5, σ2_a = 10., σ2_s = 1.2,\n    ϕ = 0.6, τ_ϕ =  0.02),\n    θy=[[Sigmoid() for n in 1:N] for N in ncells], ncells=ncells,\n    nparams=nparams, f=f)\n\ndata = synthetic_data(θ_syn, ntrials);\nnothing #hide","category":"page"},{"location":"generated/recover_neural_model/#Optimize-stuff-1","page":"Fitting a neural model","title":"Optimize stuff","text":"","category":"section"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"n = 53\n\nθy0 = vcat(vcat(initialize_θy.(data, f)...)...)\n\noptions0 = neuraloptions(ncells=ncells,\n    fit=vcat(falses(dimz), trues(sum(ncells)*nparams)),\n    x0=vcat([0., 30., 0. + eps(), 0., 0., 1. - eps(), 0.008], θy0))\nmodel, = optimize(data, options0; iterations=2, outer_iterations=1)\n\noptions = neuraloptions(ncells=ncells, x0=pulse_input_DDM.flatten(model.θ))\nmodel, = optimize(data, options, n; iterations=2, outer_iterations=1)","category":"page"},{"location":"generated/recover_neural_model/#Compute-Hessian-and-the-confidence-interavls-1","page":"Fitting a neural model","title":"Compute Hessian and the confidence interavls","text":"","category":"section"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"H = Hessian(model, n, chuck_size=4)\nCI, HPSD = CIs(H);\nnothing #hide","category":"page"},{"location":"generated/recover_neural_model/#","page":"Fitting a neural model","title":"Fitting a neural model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"man/choice_observation_model/#Fitting-the-model-to-choices-1","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"","category":"section"},{"location":"man/choice_observation_model/#How-to-save-your-data-so-it-can-be-loaded-correctly-1","page":"Fitting the model to choices","title":"How to save your data so it can be loaded correctly","text":"","category":"section"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"The package expects your data to live in a single .mat file which should contain a struct called rawdata. Each element of rawdata should have data for one behavioral trial and rawdata should contain the following fields with the specified structure:","category":"page"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"rawdata.leftbups: row-vector containing the relative timing, in seconds, of left clicks on an individual trial. 0 seconds is the start of the click stimulus.\nrawdata.rightbups: row-vector containing the relative timing in seconds (origin at 0 sec) of right clicks on an individual trial. 0 seconds is the start of the click stimulus.\nrawdata.T: the duration of the trial, in seconds. The beginning of a trial is defined as the start of the click stimulus. The end of a trial is defined based on the behavioral event “cpoke_end”. This was the Hanks convention.\nrawdata.pokedR: Bool representing the animal choice (1 = right).","category":"page"},{"location":"man/choice_observation_model/#Fitting-the-model-1","page":"Fitting the model to choices","title":"Fitting the model","text":"","category":"section"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"Once your data is correctly formatted and you have the package added in julia, you are ready to fit the model. You need to write a slurm script to use spock's resources and a .jl file to load the data and fit the model. See examples of each below. These files are also located in the package in the examples directory.","category":"page"},{"location":"man/choice_observation_model/#Example-slurm-script-1","page":"Fitting the model to choices","title":"Example slurm script","text":"","category":"section"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"This will start a job called fit_choice_model. Output will be written to a log file called fit_choice_model.out. This will run on the Brody partition of spock for 12 hours, using 44 cores and 64 GB of memory. You'll notice that we load the julia module (like we did when we added the package) and then we call julia (-p 44 uses the 44 cores) and ask it to run the .jl file.","category":"page"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"#!/usr/bin/env bash\n\n#SBATCH -J 'fit_choice_model'\n#SBATCH -o ../logs/fit_choice_model.out\n#SBATCH -p Brody\n#SBATCH --time=12:00:00\n#SBATCH --mem=64000\n#SBATCH -c 44\n\nmodule load julia/1.0.0\njulia -p 44 ./fit_choice_model.jl","category":"page"},{"location":"man/choice_observation_model/#Example-.jl-file-1","page":"Fitting the model to choices","title":"Example .jl file","text":"","category":"section"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"See comments in the script to understand what each line is doing.","category":"page"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"#use the resources of the package\nusing pulse_input_DDM\n\nprintln(\"using \", nprocs(), \" cores\")\n\n#define useful paths to the data and to a directory to save results\ndata_path, save_path = \"../data/dmFC_muscimol/\", \"../results/dmFC_muscimol/\"\n\n#if the directory that you are saving to doesn't exist, make it\nisdir(save_path) ? nothing : mkpath(save_path)\n\n#read the name of the file located in the data directory\nfiles = readdir(data_path)\nfiles = files[.!isdir.(files)]\nfile = files[1]\n\n#load your data\ndata = load_choice_data(data_path, file)\n\n#generate default parameters for initializing the optimization\npz, pd = default_parameters()\n\n#if you've already ran the optimization once and want to restart from where you stoped, this will reload those parameters\nif isfile(save_path*file)\n    pz, pd = reload_optimization_parameters(save_path, file, pz, pd)    \nend\n\n#run the optimization\npz, pd, = optimize_model(pz, pd, data)\n\n#compute the Hessian around the ML solution, for confidence intervals\nH = compute_Hessian(pz, pd, data; state=\"final\")\n\n#compute confidence intervals\npz, pd = compute_CIs!(pz, pd, H)\n\n#save results\nsave_optimization_parameters(save_path,file,pz,pd)","category":"page"},{"location":"man/choice_observation_model/#Getting-help-1","page":"Fitting the model to choices","title":"Getting help","text":"","category":"section"},{"location":"man/choice_observation_model/#","page":"Fitting the model to choices","title":"Fitting the model to choices","text":"To get more details about how any function in this package works, in julia you can type ? and then the name of the function. Documentation will display in the REPL.","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"EditURL = \"https://github.com/Brody-Lab/pulse_input_DDM/blob/master/examples/choice model/recover_choice_model.jl\"","category":"page"},{"location":"generated/recover_choice_model/#Fitting-a-choice-model-1","page":"Fitting a choice model","title":"Fitting a choice model","text":"","category":"section"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"using pulse_input_DDM","category":"page"},{"location":"generated/recover_choice_model/#Generate-some-data-1","page":"Fitting a choice model","title":"Generate some data","text":"","category":"section"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"θ_syn, data = synthetic_data(;ntrials=10);\nnothing #hide","category":"page"},{"location":"generated/recover_choice_model/#Optimize-stuff-1","page":"Fitting a choice model","title":"Optimize stuff","text":"","category":"section"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"n = 53\n\noptions = choiceoptions(fit = vcat(trues(9)),\n    lb = vcat([0., 8., -5., 0., 0., 0.01, 0.005], [-30, 0.]),\n    ub = vcat([2., 30., 5., 100., 2.5, 1.2, 1.], [30, 1.]),\n    x0 = vcat([0.1, 15., -0.1, 20., 0.5, 0.8, 0.008], [0.,0.01]))\n\nmodel, = optimize(data, options, n; iterations=5, outer_iterations=1)","category":"page"},{"location":"generated/recover_choice_model/#Compute-Hessian-and-the-confidence-interavls-1","page":"Fitting a choice model","title":"Compute Hessian and the confidence interavls","text":"","category":"section"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"Blah blah blah","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"H = Hessian(model, n)\nCI, HPSD = CIs(H);\nnothing #hide","category":"page"},{"location":"generated/recover_choice_model/#","page":"Fitting a choice model","title":"Fitting a choice model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"man/neural_observation_model/#Fitting-the-model-to-neural-activity-1","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"Now, let's try fiting the model using neural data.","category":"page"},{"location":"man/neural_observation_model/#Data-conventions-1","page":"Fitting the model to neural activity","title":"Data conventions","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"Following the same conventions as (Working interactively on scotty via a SSH tunnel) but rawdata the following two fields:","category":"page"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"rawdata.St: cell array containing the spike times of each neuron on an individual trial. The cell array will be length of the number of neurons recorded on that trial. Each entry of the cell array is a column vector containing the relative timing of spikes, in seconds. Zero seconds is the start of the click stimulus.","category":"page"},{"location":"man/neural_observation_model/#Load-the-data-and-fit-the-model-interactively-1","page":"Fitting the model to neural activity","title":"Load the data and fit the model interactively","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"Working from the notebook you started in the previous section (Working interactively on scotty via a SSH tunnel), we need to create three variables to point to the data we want to fit and specify which animals and sessions we want to use:","category":"page"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"data_path: a String indicating the directory where the .mat files described above are located. For example, data_path = ENV[\"HOME\"]*\"/Projects/pulse_input_DDM.jl/data\" where ENV[\"HOME\"] is using a bash environment variable and * conjoins two strings (like strjoin in MATLAB).","category":"page"},{"location":"man/neural_observation_model/#Now-fit-the-model!-1","page":"Fitting the model to neural activity","title":"Now fit the model!","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"You can use the function optimize_model to run the model.","category":"page"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"    pz, py = optimize_model(data)","category":"page"},{"location":"man/neural_observation_model/#Important-functions-1","page":"Fitting the model to neural activity","title":"Important functions","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"    compute_LL(pz::Dict{}, py::Dict{}, data::Vector{Dict{Any,Any}},\n      f_str::String, n::Int; state::String=\"state\") where {T <: Any}","category":"page"},{"location":"man/neural_observation_model/#Fitting-the-model-on-spock-instead-1","page":"Fitting the model to neural activity","title":"Fitting the model on spock instead","text":"","category":"section"},{"location":"man/neural_observation_model/#","page":"Fitting the model to neural activity","title":"Fitting the model to neural activity","text":"See (Using spock).","category":"page"},{"location":"man/working_interactively_on_scotty/#Working-interactively-on-scotty-via-a-SSH-tunnel-1","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"","category":"section"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"You should be all set up to create a SSH tunnel to scotty (if not check out the section Preliminaries to fitting the model interactively on scotty). Follow the steps in the section Now that everything's set up, how do I open a notebook again? to create a new SSH tunnel and launch a new jupyter notebook server.","category":"page"},{"location":"man/working_interactively_on_scotty/#Running-the-model-using-a-notebook-1","page":"Working interactively on scotty via a SSH tunnel","title":"Running the model using a notebook","text":"","category":"section"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"OK, we're ready to analyze some data! Once you've created your SSH tunnel, open a new notebook and call it whatever you like and save it whereever you like. Add this to the first cell of your notebook","category":"page"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"    using Distributed\n    addprocs([some number])","category":"page"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"where [some number] is the number of extra cores you want to have access to on scotty. using Distributed is necessary to use julia's parallel computation features. In the next cell, enter","category":"page"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"    @everywhere using pulse_input_DDM","category":"page"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"Now you have imported the package into the main namespace (which means you can use it's functionality) and you've placed it on all of the processors by the @everywhere.","category":"page"},{"location":"man/working_interactively_on_scotty/#","page":"Working interactively on scotty via a SSH tunnel","title":"Working interactively on scotty via a SSH tunnel","text":"OK, now move on to the section for fitting to choice data (Fitting a model to choices) or neural data (Fitting a model to neural activity). ","category":"page"},{"location":"man/getting_the_package/#Downloading-the-package-1","page":"Downloading the package","title":"Downloading the package","text":"","category":"section"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"You need to add the pulse_input_DDM package from github. Startup julia by loading the julia module on scotty or spock:","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":">> module load julia/1.2.0\n>> julia","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"Next add the package in julia by entering the package management mode by typing ].","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"(v1.2) pkg > add https://github.com/Brody-Lab/pulse_input_DDM/","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"Another way to add the package (without typing ]) is to do the following, in the normal julia mode:","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"julia > using Pkg    \njulia > Pkg.add(PackageSpec(url=\"https://github.com/Brody-Lab/pulse_input_DDM/\"))","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"In either case, you will be prompted for your github username and password. This will require that you are part of the Brody-Lab github organization.","category":"page"},{"location":"man/getting_the_package/#","page":"Downloading the package","title":"Downloading the package","text":"When major modifications are made to the code base, you will need to update the package. You can do this in julia's package manager (]) by typing update.","category":"page"},{"location":"#pulse-input-DDM-1","page":"pulse input DDM","title":"pulse input DDM","text":"","category":"section"},{"location":"#","page":"pulse input DDM","title":"pulse input DDM","text":"This is a package for inferring the parameters of drift diffusion models (DDMs) from neural activity or behavioral data collected when a subject is performing a pulse-based evidence accumulation task.","category":"page"},{"location":"#Getting-Started-1","page":"pulse input DDM","title":"Getting Started","text":"","category":"section"},{"location":"#","page":"pulse input DDM","title":"pulse input DDM","text":"To install the package see Downloading the package.","category":"page"},{"location":"#Fitting-models-1","page":"pulse input DDM","title":"Fitting models","text":"","category":"section"},{"location":"#","page":"pulse input DDM","title":"pulse input DDM","text":"The basic functions you need to optimize the model parameters for choice data are described in Loading data and fitting a choice model. You can see an example fit to synthetic data here: Fitting a choice model.","category":"page"},{"location":"#","page":"pulse input DDM","title":"pulse input DDM","text":"Pages = [\n    \"generated/recover_choice_model.md\",\n    \"generated/fit_choice_model.md\"]\nDepth = 2","category":"page"}]
}
